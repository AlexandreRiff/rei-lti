services:
    cli:
        build:
            context: ../..
            dockerfile: ./docker/Dockerfile
            target: cli
        image: reilti-php-cli
        container_name: reilti-php-cli
        command: >
            sh -c \
            "php artisan migrate:fresh --seed --force
            && php artisan optimize:clear"
        depends_on:
            postgres:
                condition: service_started
            redis:
                condition: service_started
        networks:
            - postgres
            - redis

    php:
        build:
            context: ../..
            dockerfile: ./docker/Dockerfile
            target: php
        image: reilti-php
        container_name: reilti-php
        depends_on:
            cli:
                condition: service_completed_successfully
        volumes:
            - reilti-storage-public-volume:/var/www/html/storage/app/public
            - reilti-storage-private-volume:/var/www/html/storage/app/private
        networks:
            - web
            - postgres
            - redis
        restart: on-failure

    web:
        build:
            context: ../..
            dockerfile: ./docker/Dockerfile
            target: web
        image: reilti-web
        container_name: reilti-web
        environment:
            - FPM_HOST=reilti-php:9000
        depends_on:
            php:
                condition: service_started
        volumes:
            - reilti-storage-public-volume:/var/www/html/public/storage
        ports:
            - 80:80
        networks:
            - web
        restart: on-failure

    postgres:
        image: postgres:latest
        environment:
            - POSTGRES_USER=reilti
            - POSTGRES_PASSWORD=bgm8QdLdBR9f6EwEla7U7q83
            - POSTGRES_DB=reilti
        container_name: postgres
        volumes:
            - postgres-volume:/var/lib/postgresql/data
        networks:
            - postgres
        restart: on-failure

    redis:
        image: redis:alpine
        container_name: redis
        command: "redis-server --requirepass reilti"
        volumes:
            - redis-volume:/data
        networks:
            - redis
        restart: on-failure

volumes:
    reilti-storage-public-volume: {}
    reilti-storage-private-volume: {}
    postgres-volume: {}
    redis-volume: {}
networks:
    web:
        driver: bridge
    postgres:
        driver: bridge
    redis:
        driver: bridge
